{"version":3,"sources":["components/navigation/toolbar.js","hoc/Layout/Layout.js","containers/Home/Home.js","scenes/AuctionBattleScene.js","containers/Auction/AuctionBattle/AuctionBattle.js","components/UI/AuctionItem/auctionItem.js","containers/Auction/Auction.js","containers/App.js","serviceWorker.js","index.js","assets/images/bigyoshi.png","assets/icons/sprite.svg"],"names":["toolbar","props","react_default","a","createElement","Fragment","className","react_router_dom","to","xlinkHref","concat","sprite","href","Layout","components_navigation_toolbar","this","children","Component","Home","AuctionBattleScene","preload","_this","load","setBaseURL","image","create","parent","document","getElementById","width","parentElement","clientWidth","height","clientHeight","emitter","add","setOrigin","setDisplaySize","particles","createEmitter","speed","scale","start","end","blendMode","logo","physics","setVelocity","setBounce","setCollideWorldBounds","startFollow","Scene","AuctionBattle","gameConfig","type","Phaser","AUTO","orientation","default","arcade","gravity","y","scene","Game","id","auctionItem","src","alt","link","Auction","react_router","path","component","UI_AuctionItem_auctionItem","App","hoc_Layout_Layout","from","Boolean","window","location","hostname","match","app","src_containers_App","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2dee89ee.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../../assets/icons/sprite.svg';\nimport './toolbar.css';\n\nconst toolbar = props => (\n    <React.Fragment>\n        <h1 className=\"app-title\">\n            <figure className=\"logo-container\">\n                <Link to=\"/fake-auctions\">\n                    <svg className=\"logo-icon\">\n                        <use xlinkHref={`${sprite}#icon-hammer2`}></use>\n                    </svg>\n                    Fake Auctions\n                </Link>\n            </figure>\n        </h1>\n        <nav className=\"navigation\">\n            <ol className=\"navigation__list\">\n                <li className=\"navigation__list-item\">\n\n                    <Link to=\"/fake-auctions/auctions\" className=\"navigation__link\">\n                        <svg className=\"nav-icon\">\n                            <use xlinkHref={`${sprite}#icon-hammer2`}></use>\n                        </svg>\n                        auctions\n                    </Link>\n                </li>\n                <li className=\"navigation__list-item\">\n\n                    <a href=\"/\" className=\"navigation__link\">\n                        <svg className=\"nav-icon\">\n                            <use xlinkHref={`${sprite}#icon-cart`}></use>\n                        </svg>\n                        cart\n                    </a>\n                </li>\n                <li className=\"navigation__list-item\">\n\n                    <a href=\"/\" className=\"navigation__link\">\n                        <svg className=\"nav-icon\">\n                            <use xlinkHref={`${sprite}#icon-envelop`}></use>\n                        </svg>\n                        messages\n                    </a>\n                </li>\n                <li className=\"navigation__list-item\">\n\n                    <a href=\"/\" className=\"navigation__link\">\n                        <svg className=\"nav-icon\">\n                            <use xlinkHref={`${sprite}#icon-user`}></use>\n                        </svg>\n                        user\n                    </a>\n                </li>\n            </ol>\n        </nav>\n    </React.Fragment>\n);\n\nexport default toolbar;","import React, { Component } from 'react';\n\nimport Toolbar from '../../components/navigation/toolbar';\n\nimport './Layout.css';\n\nclass Layout extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <header className=\"header\">\n                    <Toolbar />\n                </header>\n                <main className=\"main\">{this.props.children}</main>\n                <footer className=\"footer\">Fake Auctions Â© 2019 by Lypzis. All rights reserved.</footer>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\n\nimport './Home.css';\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"intro-box\">\n                    <div className=\"intro-box__message\">\n                        <h1 className=\"intro-box__title\">Welcome to Fake Auctions</h1>\n                        <h2 className=\"intro-box__subtitle\">The auctions simulator</h2>\n                    </div>\n                    <button className=\"intro-box__button\">Let's get started</button>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import { Scene } from \"phaser\";\n\nexport default class AuctionBattleScene extends Scene {\n\n    preload = () => {\n        this.load.setBaseURL('http://labs.phaser.io');\n\n        this.load.image('sky', 'assets/skies/space3.png');\n        this.load.image('logo', 'assets/sprites/phaser3-logo.png');\n        this.load.image('red', 'assets/particles/red.png');\n    }\n\n    create = () => {\n        const parent = document.getElementById('aution-battle');\n        const width = parent.parentElement.clientWidth;\n        const height = parent.parentElement.clientHeight;\n\n        // this will make the image fill the background;\n        const background = this.add.image(0, 0, 'sky').setOrigin(0).setDisplaySize(width, height);\n\n        var particles = this.add.particles('red');\n\n        var emitter = particles.createEmitter({\n            speed: 100,\n            scale: { start: 1, end: 0 },\n            blendMode: 'ADD'\n        });\n\n        var logo = this.physics.add.image(400, 100, 'logo');\n\n        logo.setVelocity(100, 200);\n        logo.setBounce(1, 1);\n        logo.setCollideWorldBounds(true);\n\n        emitter.startFollow(logo);\n    }\n\n}","import React, { Component } from 'react';\nimport Phaser from 'phaser';\n\nimport AuctionBattleScene from '../../../scenes/AuctionBattleScene';\n\nclass AuctionBattle extends Component {\n\n  componentDidMount() {\n    const gameConfig = {\n      parent: \"aution-battle\",\n      type: Phaser.AUTO,\n      \n      scale: {\n        width: '100%',\n        height: '86vh',\n        scale: 'SHOW_ALL',\n        orientation: 'LANDSCAPE'  \n        //mode: Phaser.Scale.RESIZE, // https://rexrainbow.github.io/phaser3-rex-notes/docs/site/scalemanager/\n        //autoCenter: Phaser.Scale.CENTER_BOTH\n      },\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: { y: 200 }\n        }\n      },\n      scene: [AuctionBattleScene]\n    }\n\n    new Phaser.Game(gameConfig);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"aution-battle\"></div>\n        {/*<h1>This is a test :D</h1>*/}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AuctionBattle;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../../../assets/icons/sprite.svg';\n\n//temporary\nimport image from '../../../assets/images/bigyoshi.png';\n\nimport './auctionItem.css';\n\nconst auctionItem = props => (\n    <div className=\"auction-item\"> \n        <button className=\"button arrow-button\">&lt;</button>\n        <figure className=\"auction-item__box\">\n            <img src={image} alt=\"item\" className=\"auction-item__picture\"/>\n            <ol className=\"auction-item__information-list\">\n                <li className=\"auction-item__information-item\">Big Yoshi</li>\n                <li className=\"auction-item__information-item\">current price: $x.x</li>\n                <li className=\"auction-item__information-item\">time left: x:xx:xx:xx</li>\n\n                <li className=\"auction-item__information-item\">\n                    <button className=\"button details-button\">\n                    <svg className=\"details-icon\">\n                        <use xlinkHref={`${sprite}#icon-info`}></use>\n                    </svg>\n                        details\n                    </button>\n                </li>\n                <li className=\"auction-item__information-item\">\n                    <Link to={props.link} className=\"button join-button\">Join!</Link>\n                </li>\n            </ol>\n        </figure>\n        <button  className=\"button arrow-button\">&gt;</button>\n    </div>\n);\n\nexport default auctionItem;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport AuctionBattle from './AuctionBattle/AuctionBattle';\nimport AuctionItem from '../../components/UI/AuctionItem/auctionItem';\n\nclass Auction extends Component {\n\n    render() {\n        // <AuctionBattle />\n        return (\n            <React.Fragment>\n                <Switch>\n                    <Route path=\"/fake-auctions/auctions/:id\" component={AuctionBattle} />\n                    <AuctionItem link=\"/fake-auctions/auctions/:id\" />\n                </Switch>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Auction;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout/Layout';\nimport Home from './Home/Home';\nimport Auction from './Auction/Auction';\n\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n\n    return ( // <Auction />\n      <div className=\"App\">\n        <Layout>\n          <Switch>\n            <Route path=\"/fake-auctions/auctions\" component={Auction} />\n            <Route path=\"/fake-auctions\" component={Home} />\n            <Redirect from=\"/\" to=\"/fake-auctions\" />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bigyoshi.736e2ba0.png\";","module.exports = __webpack_public_path__ + \"static/media/sprite.cd53a949.svg\";"],"sourceRoot":""}