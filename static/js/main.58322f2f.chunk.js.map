{"version":3,"sources":["components/navigation/toolbar.js","hoc/Layout/Layout.js","containers/Home/Home.js","scenes/AuctionBattleScene.js","containers/Auction/AuctionBattle/AuctionBattle.js","components/UI/AuctionItem/auctionItem.js","components/UI/Backdrop/backdrop.js","components/UI/Modal/Modal.js","components/UI/AuctionItem/AuctionItemDetails/AuctionItemDetails.js","containers/Auction/Auction.js","containers/App.js","serviceWorker.js","index.js","assets/images/bigyoshi.png","assets/icons/sprite.svg"],"names":["toolbar","props","navLinksListItems","toolbarLinks","map","toolbarLink","react_default","a","createElement","key","name","className","react_router_dom","to","route","xlinkHref","concat","sprite","icon","Fragment","logo","Layout","state","navLinks","components_navigation_toolbar","this","children","Component","Home","AuctionBattleScene","preload","_this","load","setBaseURL","image","create","parent","document","getElementById","width","parentElement","clientWidth","height","clientHeight","add","setOrigin","setDisplaySize","emitter","particles","createEmitter","speed","scale","start","end","blendMode","physics","setVelocity","setBounce","setCollideWorldBounds","startFollow","Scene","AuctionBattle","gameConfig","type","Phaser","AUTO","orientation","default","arcade","gravity","y","scene","Game","id","auctionItem","src","alt","onClick","openModal","link","backdrop","show","join","close","Modal","console","log","nextProps","nextState","UI_Backdrop_backdrop","closeModal","AuctionItemDetails","Auction","modalShow","modalCloseHandler","setState","modalOpenHandler","modalContent","AuctionItem_AuctionItemDetails_AuctionItemDetails","test","UI_Modal_Modal","react_router","path","component","UI_AuctionItem_auctionItem","App","hoc_Layout_Layout","from","Boolean","window","location","hostname","match","app","src_containers_App","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.58322f2f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../../assets/icons/sprite.svg';\nimport './toolbar.css';\n\nconst toolbar = props => {\n\n    const navLinksListItems = props.toolbarLinks.map(toolbarLink => {\n        return (\n            <li key={toolbarLink.name} className=\"navigation__list-item\">\n                <Link to={toolbarLink.route} className=\"navigation__link\">\n                    <svg className=\"nav-icon\">\n                        <use xlinkHref={`${sprite}#${toolbarLink.icon}`}></use>\n                    </svg> {toolbarLink.name}\n                </Link>\n            </li>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            <h1 className=\"app-title\">\n                <figure className=\"logo-container\">\n                    <Link to={props.logo.route}>\n                        <svg className=\"logo-icon\">\n                            <use xlinkHref={`${sprite}#${props.logo.icon}`}></use>\n                        </svg>\n                        {props.logo.name}\n                </Link>\n                </figure>\n            </h1>\n            <nav className=\"navigation\">\n                <ol className=\"navigation__list\">\n                    {navLinksListItems}\n                </ol>\n            </nav>\n        </React.Fragment>\n    );\n};\n\nexport default toolbar;","import React, { Component } from 'react';\n\nimport Toolbar from '../../components/navigation/toolbar';\n\nimport './Layout.css';\n\nclass Layout extends Component {\n\n    state = {\n        logo: { route: '/fake-auction', icon: 'icon-hammer2', name: 'Fake Auctions' },\n        navLinks: [\n            { route: '/fake-auction/auctions', icon: 'icon-hammer2', name: 'auctions' },\n            { route: '/fake-auction', icon: 'icon-cart', name: 'cart' },\n            { route: '/fake-auction', icon: 'icon-envelop', name: 'notifications' },\n            { route: '/fake-auction', icon: 'icon-user', name: 'user' },\n        ]\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <header className=\"header\">\n                    <Toolbar\n                        logo={this.state.logo}\n                        toolbarLinks={this.state.navLinks}\n                    />\n                </header>\n                <main className=\"main\">{this.props.children}</main>\n                <footer className=\"footer\">Fake Auctions © 2019 by Lypzis. All rights reserved.</footer>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\n\nimport './Home.css';\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"intro-box\">\n                    <div className=\"intro-box__message\">\n                        <h1 className=\"intro-box__title\">Welcome to Fake Auctions</h1>\n                        <h2 className=\"intro-box__subtitle\">The auctions simulator</h2>\n                    </div>\n                    <button className=\"intro-box__button\">Let's get started</button>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import { Scene } from \"phaser\";\n\nexport default class AuctionBattleScene extends Scene {\n\n    preload = () => {\n        this.load.setBaseURL('http://labs.phaser.io');\n\n        this.load.image('sky', 'assets/skies/space3.png');\n        this.load.image('logo', 'assets/sprites/phaser3-logo.png');\n        this.load.image('red', 'assets/particles/red.png');\n    }\n\n    create = () => {\n        const parent = document.getElementById('aution-battle');\n        const width = parent.parentElement.clientWidth;\n        const height = parent.parentElement.clientHeight;\n\n        // this will make the image fill the background;\n        this.add.image(0, 0, 'sky').setOrigin(0).setDisplaySize(width, height);\n\n        var particles = this.add.particles('red');\n\n        var emitter = particles.createEmitter({\n            speed: 100,\n            scale: { start: 1, end: 0 },\n            blendMode: 'ADD'\n        });\n\n        var logo = this.physics.add.image(400, 100, 'logo');\n\n        logo.setVelocity(100, 200);\n        logo.setBounce(1, 1);\n        logo.setCollideWorldBounds(true);\n\n        emitter.startFollow(logo);\n    }\n\n}","import React, { Component } from 'react';\nimport Phaser from 'phaser';\n\nimport AuctionBattleScene from '../../../scenes/AuctionBattleScene';\n\nclass AuctionBattle extends Component {\n\n  componentDidMount() {\n    const gameConfig = {\n      parent: \"aution-battle\",\n      type: Phaser.AUTO,\n      \n      scale: {\n        width: '100%',\n        height: '86vh',\n        scale: 'SHOW_ALL',\n        orientation: 'LANDSCAPE'  \n        //mode: Phaser.Scale.RESIZE, // https://rexrainbow.github.io/phaser3-rex-notes/docs/site/scalemanager/\n        //autoCenter: Phaser.Scale.CENTER_BOTH\n      },\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: { y: 200 }\n        }\n      },\n      scene: [AuctionBattleScene]\n    }\n\n    new Phaser.Game(gameConfig);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"aution-battle\"></div>\n        {/*<h1>This is a test :D</h1>*/}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AuctionBattle;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../../../assets/icons/sprite.svg';\n\n//temporary\nimport image from '../../../assets/images/bigyoshi.png';\n\nimport './auctionItem.css';\n\nconst auctionItem = props => ( // all the information here shall come from the parent component\n    <div className=\"auction-item\">\n        <button className=\"button arrow-button\">&lt;</button>\n        <figure className=\"auction-item__box\">\n            <img src={image} alt=\"item\" className=\"auction-item__picture\" />\n            <ol className=\"auction-item__information-list\">\n                <li className=\"auction-item__information-item\">Big Yoshi</li>\n                <li className=\"auction-item__information-item\">current price: $x.x</li>\n                <li className=\"auction-item__information-item\">time left: x:xx:xx:xx</li>\n\n                <li className=\"auction-item__information-item\">\n                    <button\n                        className=\"button details-button\"\n                        onClick={props.openModal}>\n                        <svg className=\"details-icon\">\n                            <use xlinkHref={`${sprite}#icon-info`}></use>\n                        </svg>\n                        details\n                    </button>\n                </li>\n                <li className=\"auction-item__information-item\">\n                    <Link to={props.link} className=\"button join-button\">Join!</Link>\n                </li>\n            </ol>\n        </figure>\n        <button className=\"button arrow-button\">&gt;</button>\n    </div>\n);\n\nexport default auctionItem;","import React from 'react';\n\nimport './backdrop.css';\n\nconst backdrop = props => (\n    <div \n    className={[\"backdrop\", props.show ? \"Backdrop--show\" : \"Backdrop--doNotShow\"].join(' ')}\n    onClick={props.close}></div>\n);\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport Backdrop from '../Backdrop/backdrop';\n\nimport './Modal.css';\n\nclass Modal extends Component {\n\n    componentDidMount() {\n        console.log('Modal.js' + this.props.show);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Backdrop show={this.props.show} close={this.props.closeModal}/>\n                <div className={[\"modal\", this.props.show ? \"Modal--show\" : \"Modal--doNotShow\"].join(' ')}>{this.props.children}</div>\n            </React.Fragment>\n        );\n    }\n};\n\nexport default Modal;\n\n\n\n/*\nshouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    \n    componentWillUpdate() {\n        console.log('[Modal.js] will update')\n    } \n\n    render() {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClose} />\n                <div className={[classes.Modal, this.props.show ? classes.show : classes.doNotShow].join(' ')}>\n                    {this.props.children}\n                </div>\n            </Aux >\n        );\n    }\n*/","import React, { Component } from 'react';\n\nimport sprite from '../../../../assets/icons/sprite.svg';\n\nimport './AuctionItemDetails.css';\n\nclass AuctionItemDetails extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <ol className=\"details__list\">\n                    <li className=\"details__list-item\">\n                        <p className=\"topic\">item condition:</p><p className=\"topic__content\">Good</p>\n                    </li>\n                    <li className=\"details__list-item details__list-item--description\">\n                        <p className=\"topic\">details: </p><p className=\"topic__content\">A big yoshi sitting on the ground.</p>\n                    </li>\n                    <li className=\"details__list-item\">\n                        <p className=\"topic\">return policy:</p><p className=\"topic__content\">Accepts Return.</p>\n                    </li>\n                    <li className=\"details__list-item\">\n                        <p className=\"topic\">shipping</p>\n                    </li>\n                    <li className=\"details__list-item\">\n                        <p className=\"topic\">seller:</p><p className=\"topic__content\">Ol'Daddy</p>\n                    </li>\n                    <li className=\"details__list-item\">\n                        <p className=\"topic\">seller rate: </p>\n                        <p className=\"topic__content\">5</p>\n                        <svg className=\"rate\">\n                            <use xlinkHref={`${sprite}#icon-star-full`}></use>\n                        </svg>\n                    </li>\n                    <li className=\"details__list-item\">\n                        <p>contact:</p><p className=\"topic__content\">oldaddy@yahoo.com</p>\n                    </li>\n                </ol>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AuctionItemDetails;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport AuctionBattle from './AuctionBattle/AuctionBattle';\nimport AuctionItem from '../../components/UI/AuctionItem/auctionItem';\nimport Modal from '../../components/UI/Modal/Modal';\nimport AuctionItemDetails from '../../components/UI/AuctionItem/AuctionItemDetails/AuctionItemDetails';\n\nclass Auction extends Component {\n    state = {\n        modalShow: false\n    }\n\n    modalCloseHandler = () => {\n        this.setState({ modalShow: false });\n    }\n\n    modalOpenHandler = () => {\n        this.setState({ modalShow: true });\n    }\n\n    render() {\n        let modalContent = null;\n\n        modalContent = <AuctionItemDetails\n            test=\"modal content\" />\n\n        return (\n            <React.Fragment>\n                <Modal\n                    closeModal={this.modalCloseHandler}\n                    show={this.state.modalShow}>\n                    {modalContent}\n                </Modal>\n                <Switch>\n                    <Route path=\"/fake-auction/auctions/:id\" component={AuctionBattle} />\n                    <AuctionItem\n                        link=\"/fake-auction/auctions/:id\"\n                        openModal={this.modalOpenHandler} />\n                </Switch>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Auction;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout/Layout';\nimport Home from './Home/Home';\nimport Auction from './Auction/Auction';\n\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n\n    return ( // <Auction />\n      <div className=\"App\">\n        <Layout>\n          <Switch>\n            <Route path=\"/fake-auction/auctions\" component={Auction} />\n            <Route path=\"/fake-auction\" component={Home} />\n            <Redirect from=\"/\" to=\"/fake-auction\" />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bigyoshi.736e2ba0.png\";","module.exports = __webpack_public_path__ + \"static/media/sprite.8bed4c6b.svg\";"],"sourceRoot":""}